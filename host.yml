---
- name: host provisioning playbook
  hosts: host
  vars:
    latest: false
    travis_ci: false
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    gobootstrap: /usr/lib/go
    guest_emulator: /usr/bin/qemu-system-x86_64
    guest_arch: x86_64
    guest_machine: pc-i440fx-2.11
    guest_disk_type: block
    guest_disk_path: /dev/vg1
    guest_disk_source_type: dev
    guest_intf0_dev_prefix: ens3-
    guest_intf1_dev_prefix: ens4-
    guest_intf2_dev_prefix: ens5-
    guest_management_network: 192.168.122
    guests:
      - { id: 10, type: kube }
      - { id: 11, type: kube }
      - { id: 12, type: hv   }
      - { id: 13, type: hv   }
      - { id: 20, type: node }
      - { id: 21, type: node }
      - { id: 22, type: node }
      - { id: 23, type: node }
      - { id: 24, type: node }
      - { id: 25, type: node }
      - { id: 26, type: node }
      - { id: 27, type: node }
      - { id: 28, type: node }
      - { id: 29, type: node }
      - { id: 30, type: node }
      - { id: 31, type: node }
      - { id: 32, type: node }
      - { id: 33, type: node }
      - { id: 34, type: node }
      - { id: 35, type: node }
      - { id: 36, type: node }
      - { id: 37, type: node }
      - { id: 38, type: node }
      - { id: 39, type: node }
  environment:
    GOROOT: "{{ lookup('env', 'GOROOT') }}"
    GOPATH: "{{ lookup('env', 'GOPATH') }}"
    PATH: "{{ lookup('env', 'GOROOT') }}/bin:{{ lookup('env', 'GOPATH') }}/bin:/usr/bin:/bin"
  gather_facts: false
  tasks:
    - name: install kvm/container to create virtual environment
      pacman: name={{ item }} state=present force=true update_cache=false
      with_items:
        - qemu-headless
        - libvirt
        - libvirt-python
        - virt-install
        - virt-viewer
        - tigervnc
        - docker
        - python-lxml
        - python2-docker
        - python2-requests
      become: true

    - name: update files under /etc
      template:
        src: "templates/etc/{{ item }}.j2"
        dest: "/etc/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - hosts
        - modprobe.d/modprobe.conf
        - systemd/network/br0.network
      become: true

    - name: add user to the libvirt/container groups
      user:
        name: "{{ lookup('env', 'USER') }}"
        append: true
        groups: libvirt,docker
      become: true
      when: not travis_ci|bool

    - name: setup qemu group
      lineinfile:
        path: /etc/libvirt/qemu.conf
        regexp: 'group = '
        line: 'group = "kvm"'
        owner: root
        group: root
        mode: 0644
      become: true

    - name: setup libvirt group
      lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: 'unix_sock_group'
        line: 'unix_sock_group = "libvirt"'
        owner: root
        group: root
        mode: 0644
      become: true

    - name: enable basic systemd services
      systemd: name={{ item }} enabled=true state=started
      with_items:
        - libvirtd
        - virtlogd
        - docker
      become: true
      when: not travis_ci|bool

    - name: undefine libvirt guest network
      virt_net: name=default state=absent
      become: true
      when: latest|bool and not travis_ci|bool

    - name: define libvirt guest network
      virt_net:
        name: default
        state: present
        xml: "{{ lookup('template', 'templates/etc/libvirt/qemu/networks/default.xml.j2') }}"
      become: true
      when: latest|bool and not travis_ci|bool

    - name: undefine libvirt guest
      virt:
        name: "{{ item.type }}{{ item.id }}"
        command: undefine
      with_items: "{{ guests }}"
      become: true
      ignore_errors: true
      when: latest|bool and not travis_ci|bool

    - name: define libvirt guest
      virt:
        name: "{{ item.type }}{{ item.id }}"
        command: define
        xml: "{{ lookup('template', 'templates/etc/libvirt/qemu/{{ item.type }}.xml.j2') }}"
      with_items: "{{ guests }}"
      become: true
      when: latest|bool and not travis_ci|bool

    - name: run the local docker registry
      docker_container:
        name: registry
        image: registry:2
        state: started
        restart: yes
        restart_policy: always
        ports:
          - "5000:5000"
      when: not travis_ci|bool

    - name: install the latest golang
      import_tasks: tasks/golang.yml

    - name: get the kubectl
      command: go get -u {{ item }}
      with_items:
        - k8s.io/kubernetes/cmd/kubectl
