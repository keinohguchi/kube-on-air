---
- name: setup ubuntu guest
  hosts: guest
  vars:
    rabbit: true
    ansible: true
    latest: false
    travis_ci: false
    host_ip: "192.168.122.1"
    guest_management_network: 192.168.122
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    gobootstrap: /usr/lib/go-1.6
  gather_facts: true
  tasks:
    - name: update hostname to be sync with the inventory host name
      hostname: name={{ inventory_hostname }}
      become: true

    - name: make console access through ttyS0
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="console=ttyS0,38400n8"'
        owner: root
        group: root
        mode: 0644
      register: console
      become: true

    - name: update the /boot/grub/grub.cfg to reflect the change
      command: grub-mkconfig -o /boot/grub/grub.cfg
      become: true
      when: console.changed

    - name: update files under /etc
      template:
        src: "templates/etc/{{ item }}.j2"
        dest: "/etc/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - hosts
      become: true

    - name: update /etc/network/interfaces
      copy:
        src: files/etc/network/interfaces
        dest: /etc/network/interfaces
        mode: 0644
        owner: root
        group: root
      become: true

    - name: assign br0 IP address
      template:
        src: templates/etc/network/interfaces.d/br0.j2
        dest: /etc/network/interfaces.d/br0
        mode: 0644
        owner: root
        group: root
      become: true
      register: br0

    - name: bring up br0 interface
      command: ifup -a
      become: true
      changed_when: false
      when: br0.changed

    - name: install console apps
      apt: name={{ item }} state=present update_cache=true
      with_items:
        - vim
        - tmux
        - cscope
        - tree
        - jq
        - aspell
        - aspell-en
      become: true

    - name: install network tools
      apt: name={{ item }} state=present update_cache=false
      with_items:
        - curl
        - w3m
        - elinks
      become: true

    - name: install developer tools
      apt: name={{ item }} state=present update_cache=false
      with_items:
        - binutils
        - g++
        - git
        - gdb
        - make
        - autoconf
        - automake
        - libtool
        - bzip2
        - unzip
        - golang-1.6
        - cpanminus
        - python-all
        - python-pip
        - python-six
        - python3-pip
        - python3-setuptools
        - graphviz
        - debhelper
        - dh-autoreconf
        - libmysqlclient-dev
        - libssl-dev
        - openssl
        - procps
        - libvirt-dev
        - libvirt-bin
        - libcap-ng-dev
        - virtinst
      become: true

    - name: install tools available ubuntu16.04 or above
      apt: name={{ item }} state=present update_cache=false
      with_items:
        - asciinema
        - cgroup-tools
        - docker.io
        - vagrant
        - virtualbox
        - chef
        - chef-zero
      become: true
      when: ansible_distribution_version == "16.04"

    - name: add user to the docker group
      user:
        name: "{{ lookup('env', 'USER') }}"
        append: true
        groups: libvirtd,docker
      become: true

    - name: allow the insecure air.local local docker registry access
      lineinfile:
        path: /etc/systemd/system/multi-user.target.wants/docker.service
        regexp: "^ExecStart"
        line: "ExecStart=/usr/bin/dockerd --insecure-registry air.local:5000 -H fd:// $DOCKER_OPTS"
      become: true
      when: ansible_distribution_version == "16.04"

    - name: restart docker daemon to reflect the previous change
      systemd:
        name: docker
        state: restarted
        daemon_reload: true
      become: true
      when: ansible_distribution_version == "16.04"

    - name: setup RabbitMQ environment
      import_tasks: tasks/rabbit.yml
      vars:
        scheme: amqp
        username: rabbit
        password: RabbitMQ
        cluster: "localhost:5672"
        vhost: hole
        configure_priv: ".*"
        read_priv: ".*"
        write_priv: ".*"
      when: rabbit|bool and not travis_ci|bool

    - name: create git root directory
      file: path={{ gitpath }} state=directory mode=0700

    - name: light the fire!
      import_tasks: tasks/all.yml
