---
- name: setup arch based kube node
  hosts: node
  gather_facts: true
  vars:
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    cluster_token: "{{ hostvars[master]['cluster_token'] }}"
    cluster_apiserver: "{{ hostvars[master]['cluster_apiserver'] }}"
    cluster_cert_hash: "{{ hostvars[master]['cluster_cert_hash'] }}"
    travis_ci: false
  tasks:
    - name: get the kubernetes
      git:
        repo: "{{ gitsite }}kubernetes/kubernetes"
        dest: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
        update: yes
        ssh_opts: "-o StrictHostKeyChecking=no"
      register: git
      environment:
        GOPATH: "{{ lookup('env', 'GOPATH') }}"

    - name: install the kubeadm and kubelet
      command: go install "./cmd/{{ item }}"
      args:
        chdir: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
      with_items:
        - kubeadm
        - kubelet
      when: git.before != git.after
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOPATH') }}/bin:{{ lookup('env', 'GOROOT') }}/bin:/usr/bin:/bin"

    - name: check if I'm already in the cluster
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet
      become: true
      changed_when: false

    - name: join the cluster!
      command: |
        kubeadm join --token "{{ cluster_token }}" "{{ cluster_apiserver }}"
          --discovery-token-ca-cert-hash "{{ cluster_cert_hash }}"
      become: true
      when: kubelet.stat.exists == false
