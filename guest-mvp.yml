---
- name: setup MVP ubuntu guest
  hosts: guest
  vars:
    latest: false
    travis_ci: false
    guest_management_network: 192.168.123
  gather_facts: true
  tasks:
    - name: install console apps
      apt:
        state: present
        update_cache: true
        name:
          - vim
          - tmux
          - mutt
          - cscope
          - tree
          - jq
          - aspell
          - aspell-en
      become: true

    - name: install network tools
      apt:
        state: present
        update_cache: false
        name:
          - curl
          - elinks
          - tcpdump
      become: true

    - name: install developer tools
      apt:
        state: present
        update_cache: false
        name:
          - binutils
          - bc
          - g++
          - git
          - gdb
          - make
          - autoconf
          - automake
          - libtool
          - bzip2
          - unzip
      become: true

    - name: update hostname to be sync with the inventory host name
      hostname: name={{ inventory_hostname_short }}
      become: true

    - name: make console access through ttyS0
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="console=ttyS0,38400n8"'
        owner: root
        group: root
        mode: 0644
      register: console
      become: true

    - name: update the /boot/grub/grub.cfg to reflect the change
      command: grub-mkconfig -o /boot/grub/grub.cfg
      become: true
      when: console.changed

    - name: make sure /etc/network/interfaces.d exists
      file: path=/etc/network/interfaces.d state=directory
      become: true

    - name: update files under /etc
      template:
        src: "templates/etc/{{ item }}.j2"
        dest: "/etc/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - hosts
      become: true

    - name: install docker packages
      import_tasks: tasks/docker.yml

    - name: add user to the libvirt/container group
      user:
        name: "{{ lookup('env', 'USER') }}"
        append: true
        groups: docker
      become: true

    - name: restart docker daemon to reflect the previous change
      systemd:
        name: docker
        state: restarted
        daemon_reload: true
      become: true
      when: ansible_distribution_version == "16.04"
