---
- name: setup ubuntu based kube master
  hosts: master
  vars:
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    gobootstrap: /usr/lib/go-1.10
    latest: true
    cluster_podcidr: 10.244.0.0/16
  gather_facts: true
  tasks:
    - name: install apt packages
      apt:
        state: present
        update_cache: true
        name:
          - golang-1.10
      become: true

    - name: create git root directory
      file: path={{ gitpath }} state=directory mode=0700

    - name: install the latest golang
      import_tasks: tasks/golang.yml
      when: latest|bool

    - name: install the latest etcd
      import_tasks: tasks/etcd.yml
      when: latest|bool

    - name: check if the master is already initialized
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet
      changed_when: false

    - name: initialize the cluster master!
      command: |
        kubeadm init --pod-network-cidr "{{ cluster_podcidr }}"
          --apiserver-advertise-address "{{ cluster_node_ip }}"
      become: true
      register: kubeadm
      when: kubelet.stat.exists == false and ansible_distribution_version == "18.04"

    - name: get API token, API server, and certificate hash
      set_fact:
        cluster_apiserver: "{{kubeadm.stdout|regex_search(regexp, '\\1')|list|first}}"
        cluster_token: "{{kubeadm.stdout|regex_search(regexp, '\\2')|list|first}}"
        cluster_cert_hash: "{{kubeadm.stdout|regex_search(regexp, '\\3')|list|first}}"
      vars:
        regexp: 'kubeadm join (\S+) --token (\S+) --discovery-token-ca-cert-hash (\S+)'
      when: kubeadm.changed == true
      changed_when: false

    - name: fetch the admin.conf for kubectl to work
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        flat: true
      become: yes
      when: kubeadm.changed == true
      changed_when: false
