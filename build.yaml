---
- name: build the k8s!
  hosts: host
  gather_facts: false
  vars:
    ci: false
    build: false
    full_build: false
    gobootstrap: /usr/lib/go
    gitsite: "git@github.com:"
    gitpath: "{{ lookup('env', 'HOME') }}/git/"
    # https://dl.k8s.io/release/stable-1.txt
    # hack/lib/version.sh
    ldflags: -X k8s.io/component-base/version.gitVersion=v1.19.1
  tasks:
    - name: install package(s)
      pacman:
        state: present
        update_cache: true
        name:
          - go
          - gcc
          - git
          - make
      become: true

    - name: create git and $GOPATH/bin root directory
      file: path={{ item }} state=directory mode=0700
      with_items:
        - "{{ gitpath }}"
        - "{{ lookup('env', 'GOPATH') }}/bin"

    - name: install the latest golang
      import_tasks: tasks/golang.yaml

    - name: make sure /var/lib/etcd is empty
      file: path=/var/lib/etcd state=absent
      become: true

    - name: get the kubernetes
      git:
        repo: "{{ gitsite }}kubernetes/kubernetes"
        dest: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
        force: true
        update: yes
        ssh_opts: "-o StrictHostKeyChecking=no"
      register: k8s
      environment:
        GOPATH: "{{ lookup('env', 'GOPATH') }}"

    - name: build openapi-gen and go2make for openapi.go generation
      command: go install -mod=vendor -ldflags "{{ ldflags }}" "{{ item }}"
      args:
        chdir: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
      with_items:
        - ./vendor/k8s.io/kube-openapi/cmd/openapi-gen
        - ./hack/make-rules/helpers/go2make
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOPATH') }}/bin:{{ lookup('env', 'GOROOT') }}/bin:/usr/bin:/bin"

    - name: generate openapi.go
      make:
        chdir:  "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
        target: ./pkg/generated/openapi/openapi.go
        file:   ./Makefile.generated_files
        params:
          CALLED_FROM_MAIN_MAKEFILE: 1
          KUBE_VERBOSE: 2
          PRJ_SRC_PATH: .
          META_DIR: .make
          OUT_DIR: _output
          BIN_DIR: "{{ lookup('env', 'GOPATH') }}/bin"
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOPATH') }}/bin:{{ lookup('env', 'GOROOT') }}/bin:/usr/bin:/bin"
      when: not ci|bool

    - name: copy generated openapi.go
      copy:
        remote_src: true
        src:  "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes/_output/local/go/src/{{ item }}"
        dest: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes/{{ item }}"
        mode: 0755
      with_items:
        - pkg/generated/openapi/openapi.go
      when: not ci|bool

    # https://kubernetes.io/docs/concepts/overview/components/
    - name: build kubectl, kubeadm, and kubelet components
      command: go install -ldflags "{{ ldflags }}" "{{ item }}"
      args:
        chdir: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
      with_items:
        - ./cmd/kubectl
        - ./cmd/kubeadm
        - ./cmd/kubelet
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOPATH') }}/bin:{{ lookup('env', 'GOROOT') }}/bin:/usr/bin:/bin"

    # https://kubernetes.io/docs/concepts/overview/components/
    - name: build full k8s components
      command: go install -ldflags "{{ ldflags }}" "{{ item }}"
      args:
        chdir: "{{ lookup('env', 'GOPATH') }}/src/k8s.io/kubernetes"
      with_items:
        - ./cmd/kube-proxy
        - ./cmd/kube-apiserver
        - ./cmd/kube-scheduler
        - ./cmd/kube-controller-manager
      environment:
        GOROOT: "{{ lookup('env', 'GOROOT') }}"
        GOPATH: "{{ lookup('env', 'GOPATH') }}"
        PATH: "{{ lookup('env', 'GOPATH') }}/bin:{{ lookup('env', 'GOROOT') }}/bin:/usr/bin:/bin"
      when: full_build|bool
